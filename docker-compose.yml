x-docker-volume:
    &docker-volume
    - /var/run/docker.sock:/var/run/docker.sock:ro

services:
    traefik:
        image: traefik:v2.6.1
        command:
            - "--api.insecure=true"
            - "--entrypoints.web.address=:80"
            - "--log.level=WARN"
            - "--providers.docker=true"
            - "--providers.docker.defaultRule=Host(`${TRAEFIK_HOST}.${DOMAIN}`)"
            - "--providers.docker.swarmMode=false"
        networks:
            - traefik
        ports:
            - "80:80"
            - "8080:8080"
        restart: always
        volumes: *docker-volume
    api:
        build:
            context: ./containers/development/typescript
            target: dev
        networks:
            - traefik
        secrets:
            - source: POSTGRES_PASSWORD
        volumes:
            - ./containers/development/typescript/config/:/home/node/config
            - ./containers/config:/home/node/config/shared
            - ./volumes/api:/home/node/app
            - ./volumes/typescript/testHelper:/home/node/app/src/testHelper
            - ./volumes/typescript/wrapper:/home/node/app/src/wrapper
    apiprime:
        extends:
            service: api
        volumes:
            - ./volumes/apiprime:/home/node/app
    apiproduction:
        extends:
            service: api
        volumes:
            - ./volumes/apiproduction:/home/node/app
    dbmigration:
        build:
            context: ./containers/development/typescript
            target: withgit
        networks:
            - traefik
        secrets:
            - source: POSTGRES_PASSWORD
        volumes:
            - ./containers/development/typescript/config/:/home/node/config
            - ./containers/config:/home/node/config/shared
            - ./volumes/dbmigration/app:/home/node/app
            - ./volumes/typescript/testHelper:/home/node/app/src/testHelper
            - ./volumes/typescript/wrapper:/home/node/app/src/wrapper
            - ./volumes/dbmigration/migrations:/home/node/migrations
            - ./volumes/dbmigration/gitRepos:/home/node/gitRepos
            - ./:/home/node/gitRepos/current
            - ./volumes/apiprime:/home/node/volumes/apiprime
            - ./volumes/apiproduction:/home/node/volumes/apiproduction
    info:
        build:
            context: ./containers/support/info
            args:
                domain: ${DOMAIN}
        networks:
            - traefik
        volumes:
            - ./volumes/api/output:/usr/local/apache2/htdocs/api
            - ./volumes/dbmigration/app/output:/usr/local/apache2/htdocs/dbmigration
    patternlab:
        build:
            context: ./containers/development/patternlab
            target: dev
        networks:
            - traefik
        volumes:
            - ./containers/development/patternlab/config/:/home/node/config
            - ./containers/config:/home/node/config/shared
            - ./volumes/patternlab:/home/node/app
            - ../${ASSETS_PATH}:/home/node/app/src/assets
            - ../${ASSETS_PATH}:/home/node/app/www/assets
    postgres:
        build:
            context: ./containers/support/postgres
            target: dev
        networks:
            - traefik
        secrets:
            - source: POSTGRES_PASSWORD
        volumes:
            - ./volumes/postgres:/var/lib/postgresql/data
    www:
        build:
            context: ./containers/support/info
        networks:
            - traefik
        volumes:
            - ./volumes/patternlab/pattern_exports:/usr/local/apache2/htdocs
            - ../${ASSETS_PATH}:/usr/local/apache2/htdocs/assets
networks:
    traefik:
secrets:
    POSTGRES_PASSWORD:
        file: ./secrets/postgres_password
