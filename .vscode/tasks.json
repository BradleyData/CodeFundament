{
    "version": "2.0.0",
    "tasks": [
        {
            "label": "Check versions",
            "type": "shell",
            "group": "none",
            "command": "docker-compose --file containers${pathSeparator}support${pathSeparator}bash${pathSeparator}docker-compose.yml up --build check_versions",
            "problemMatcher": []
        },
        {
            "label": "Initialize postgres database",
            "type": "shell",
            "group": "none",
            "command": "docker-compose --file containers${pathSeparator}support${pathSeparator}postgres${pathSeparator}docker-compose.yml run --rm initialize",
            "problemMatcher": []
        },
        {
            "label": "Rebuild container",
            "type": "shell",
            "group": {
                "kind": "build",
                "isDefault": true
            },
            "command": "docker-compose up --detach --build --force-recreate ${input:containerName}",
            "problemMatcher": []
        },
        {
            "label": "Rebuild all containers",
            "type": "shell",
            "group": "build",
            "command": "docker-compose up --detach --remove-orphans --build --force-recreate",
            "problemMatcher": []
        },
        {
            "label": "Start all containers",
            "type": "shell",
            "group": "none",
            "command": "docker-compose up --detach --remove-orphans",
            "problemMatcher": []
        },
        {
            "label": "Stop all containers",
            "type": "shell",
            "group": "none",
            "command": "docker-compose down",
            "problemMatcher": []
        },
        {
            "label": "Update container package-lock.json",
            "type": "shell",
            "group": "none",
            "command": "docker-compose --file containers${pathSeparator}development${pathSeparator}${input:devContainerName}${pathSeparator}docker-compose.yml run --rm update",
            "problemMatcher": []
        }
    ],
    "inputs": [
        {
            "id": "containerName",
            "description": "Which docker container?",
            "type": "pickString",
            "default": "api",
            "options": [
                "api",
                "info",
                "patternlab",
                "postgres",
                "www"
            ]
        },
        {
            "id": "devContainerName",
            "description": "Which docker container?",
            "type": "pickString",
            "default": "api",
            "options": [
                "api",
                "patternlab"
            ]
        }
    ]
}